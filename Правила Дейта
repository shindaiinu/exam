Правила Дейта

Создать конспект, содержащий ответы на вопросы и оформить его в соответствии требованиям ЕСКД:

1. Понятие распределенной базы данных, распределенной СУБД. Примеры распределённых СУБД.
Распределенная база данных –набор логически связанных между собой разделяемых данных (и их описаний), которые физически распределены в некоторой компьютерной сети.
Распределенная СУБД –программный комплекс, предназначенный для управления распределенными базами данных и позволяющий сделать распределенность информации прозрачной для конечного пользователя.
Пример.
Пользователь желает определить, какое количество выпускников общеобразовательных учреждений написало ЕГЭ по математике не менее чем на 90 баллов. Для этого он должен сделать запрос к распределенной базе данных, островами информации в которой являются образовательные сайты субъектов РФ. Но пользователь производит запрос к базе данных таким образом, будто она централизованная, и результаты запроса ему выдаются таким образом, как будто работа идет с централизованной СУБД.

2. Характеристики распределенной СУБД. 
	Базы данных в коллекции логически взаимосвязаны друг с другом. Часто они представляют собой единую логическую базу данных.
	Данные физически хранятся на нескольких сайтах. Данными на каждом сайте может управлять СУБД независимо от других сайтов.
	Процессоры на сайтах подключены через сеть. Они не имеют никакой многопроцессорной конфигурации.
	Распределенная база данных - это не слабо связанная файловая система.
	Распределенная база данных включает в себя обработку транзакций, но это не синоним системы обработки транзакций.

3. Преимущества распределенных СУБД.
Отражение структуры организации
Крупные организации, как правило, имеют множество отделений, которые могут находиться в разных концах страны и даже за ее пределами. Вполне логично будет предположить, что используемые этими организациями базы данных должны быть распределены между отдельными офисами. В каждом отделении может поддерживаться своя база данных. В подобной базе данных персонал отделения сможет выполнять необходимые ему локальные запросы. Руководству компании может потребоваться выполнять глобальные запросы, предусматривающие получение доступа к данным, сохраняемым во всех существующих отделениях компании.
Разделяемостъ и локальная автономность
Географическая распределенность организации может быть отражена в распределении ее данных, причем пользователи одного сайта смогут получать доступ к данным, сохраняемым на других сайтах. Данные могут быть помещены на тот сайт, на котором зарегистрированы пользователи, которые их чаще всего используют. В результате заинтересованные пользователи получают локальный контроль над требуемыми им данными и могут устанавливать или регулировать локальные ограничения на их использование. Администратор глобальной базы данных (АБД) отвечает за систему в целом. Как правило, часть этой ответственности делегируется на локальный уровень, благодаря чему АБД локального уровня получает возможность управлять локальной СУБД.
Повышение доступности данных
В централизованных СУБД отказ центрального компьютера вызывает прекращение функционирования всей СУБД. Однако отказ одного из сайтов СУРБД или линии связи между сайтами сделает недоступным лишь некоторые сайты, тогда как вся система в целом сохранит свою работоспособность. Распределенные СУБД проектируются таким образом, чтобы обеспечивать продолжение функционирования системы, несмотря на подобные отказы. Если выходит из строя один из узлов, система сможет перенаправить запросы к отказавшему узлу в адрес другого сайта.
Повышение надежности
Если организована репликация данных, в результате чего данные и их копии будут размещены на более чем одном сайте, отказ отдельного узла или соединительной связи между узлами не приведет к недоступности данных в системе.
Повышение производительности
Если данные размещены на самом нагруженном сайте, который унаследовал от систем-предшественников высокий уровень параллельности обработки, то развертывание распределенной СУБД может способствовать повышению скорости доступа к базе данных (по сравнению с доступом к удаленной централизованной СУБД). Более того, поскольку каждый сайт работает только с частью базы данных, уровень использования центрального процессора и служб ввода/ вывода может оказаться ниже, чем в случае централизованной СУБД.
Экономические выгоды
В шестидесятые годы мощность вычислительной установки возрастала пропорционально квадрату стоимости ее оборудования, поэтому система, стоимость которой была втрое выше стоимости данной, превосходила ее по мощности в девять раз. Эта зависимость получила название закона Гроша [7]. Однако в настоящее время считается общепринятым положение, согласно которому намного дешевле собрать из небольших компьютеров систему, мощность которой будет эквивалентна мощности одного большого компьютера. Оказывается, что намного выгоднее устанавливать в подразделениях организации собственные маломощные компьютеры, кроме того, гораздо дешевле добавить в сеть новые рабочие станции, чем модернизировать систему с мейнфреймом.
Второй потенциальный источник экономии имеет место в том случае, когда базы данных географически удалены друг от друга и приложения требуют осуществления доступа к распределенным данным. В этом случае из-за относительно высокой стоимости передаваемых по сети данных (по сравнению со стоимостью их локальной обработки) может оказаться экономически выгодным разделить приложение на соответствующие части и выполнять необходимую обработку на каждом из сайтов локально.
Модульность системы.
В распределенной среде расширение существующей системы осуществляется намного проще. Добавление в сеть нового сайта не оказывает влияния на функционирование уже существующих. Подобная гибкость позволяет организации легко расширяться. Перегрузки из-за увеличения размера базы данных обычно устраняются путем добавления в сеть новых вычислительных мощностей и устройств дисковой памяти. В централизованных СУБД рост размера базы данных может потребовать замены и оборудования (более мощной системой), и используемого программного обеспечения (более мощной или более гибкой СУБД).

4. Недостатки распределенных СУБД.
Повышение сложности
Распределенные СУБД, способные скрыть от конечных пользователей распределенную природу используемых ими данных и обеспечить необходимый уровень производительности, надежности и доступности, безусловно, являются более сложными программными комплексами, чем централизованные СУБД. Тот факт, что данные могут подвергаться репликации, также добавляет дополнительный уровень сложности в программное обеспечение СУРБД. Если репликация данных не будет поддерживаться на требуемом уровне, система будет иметь более низкий уровень доступности данных, надежности и производительности, чем централизованные системы, а все изложенные выше преимущества превратятся в недостатки.
Увеличение стоимости
Увеличение сложности означает и увеличение затрат на приобретение и сопровождение СУРБД (по сравнению с обычными централизованными СУБД). Разворачивание распределенной СУБД потребует дополнительного оборудования, необходимого для установки сетевых соединений между сайтами. Следует ожидать и роста расходов на оплату каналов связи, вызванных возрастанием сетевого трафика. Кроме того, возрастают затраты на оплату труда персонала, который потребуется для обслуживания локальных СУБД и сетевых соединений.
Проблемы защиты
В централизованных системах доступ к данным легко контролируется. Однако в распределенных системах потребуется организовать контроль доступа не только к данным, реплицируемым на несколько различных сайтов, но и защиту сетевых соединений самих по себе. Раньше сети рассматривались как совершенно незащищенные каналы связи. Хотя это отчасти справедливо и для настоящего времени, тем не менее, в отношении защиты сетевых соединений достигнут весьма существенный прогресс.
Усложнение контроля за целостностью данных
Целостность базы данных означает корректность и согласованность сохраняемых в ней данных. Требования обеспечения целостности обычно формулируются в виде некоторых ограничений, выполнение которых будет гарантировать защиту информации в базе данных от разрушения. Реализация ограничений поддержки целостности обычно требует доступа к большому количеству данных, используемых при выполнении проверок, но не требует выполнения операций обновления. В распределенных СУБД повышенная стоимость передачи и обработки данных может препятствовать организации эффективной защиты от нарушений целостности данных.
Отсутствие стандартов
Хотя функционирование распределенных СУБД зависит от эффективности используемых каналов связи, только в последнее время стали вырисовываться контуры стандарта на каналы связи и протоколы доступа к данным. Отсутствие стандартов существенно ограничивает потенциальные возможности распределенных СУБД. Кроме того, не существует инструментальных средств и методологий, способных помочь пользователям в преобразовании централизованных систем в распределенные.
Недостаток опыта
В настоящее время в эксплуатации находится уже несколько систем-прототипов и распределенных СУБД специального назначения, что позволило уточнить требования к используемым протоколам и установить круг основных проблем. Однако на текущий момент распределенные системы общего назначения еще не получили широкого распространения. Соответственно, еще не накоплен необходимый опыт промышленной эксплуатации распределенных систем, сравнимый с опытом эксплуатации централизованных систем. Такое положение дел является серьезным сдерживающим фактором для многих потенциальных сторонников данной технологии.
Усложнение процедуры разработки базы данных
Разработка распределенных баз данных, помимо обычных трудностей, связанных с процессом проектирования централизованных баз данных, требует принятия решения о фрагментации данных, распределении фрагментов по отдельным сайтам и организации процедур репликации данных.

5. Виды распределенных СУБД.
Однородный: В этом типе DDBMS все участвующие сайты должны иметь одинаковое программное обеспечение и архитектуру СУБД, что обеспечивает согласованность всех базовых систем на всех сайтах. Обеспечивает упрощенный обмен данными и интеграцию.
Гетерогенный: В этом типе DDBMS участвующие сайты могут принадлежать нескольким сайтам и использовать различное программное обеспечение СУБД, модели данных или архитектуры. Эта модель сталкивается с небольшой проблемой интеграции, поскольку представление данных всего сайта и язык запросов могут отличаться друг от друга.
Федеративные: Здесь локальные базы данных поддерживаются отдельными сайтами или федерациями. Эти локальные базы данных подключены через систему промежуточного программного обеспечения, которая позволяет пользователям получать доступ к данным из нескольких распределенных баз данных и запрашивать их. Федерация объединяет различные локальные базы данных, но сохраняет автономность на местном уровне.
Реплицируемая: В этом типе DDBMS поддерживает несколько копий одного и того же фрагмента данных на разных сайтах. Используется для обеспечения доступности данных, отказоустойчивости и бесперебойной работы. Пользователи могут получить доступ к любым данным из ближайшей реплики, если root по какой-либо причине отключен. Однако требуется выполнить высококачественную синхронизацию изменений данных при репликации.
Секционированный: В секционированной DDBMS вся база данных разделена на отдельные разделы, и каждый раздел назначен определенному сайту. Разделение может выполняться в зависимости от конкретных условий, таких как диапазон дат, географическое местоположение и функциональные модули. Каждый сайт управляет своим собственным разделом, и доступ к данным из других разделов должен осуществляться посредством связи и координации между сайтами.
Гибрид: Это просто комбинация множества других пяти типов DDBMS , которые обсуждались выше. Комбинация разработана для удовлетворения конкретных требований и задач сложных распределенных сред. Гибридные СУБД обеспечивают более оптимизированную производительность и высокую масштабируемость.

6. Функции распределенных СУБД.
СУРБД должна предоставлять следующий набор функциональных возможностей.
	Расширенные службы установки соединений должны обеспечивать доступ к удаленным сайтам и позволять передавать запросы и данные между сайтами, входящими в сеть.
	Расширенные средства ведения каталога, позволяющие сохранять сведения о распределении данных в сети.
	Средства обработки распределенных запросов, включая механизмы оптимизации запросов и организации удаленного доступа.
	Расширенные функции управления параллельностью, позволяющие поддерживать целостность реплицируемых данных.
	Расширенные функции восстановления, учитывающие возможность отказов в работе отдельных сайтов и отказов линий связи.

7. Основные компоненты распределенных СУБД.
	Узлы (Nodes): отдельные компьютеры или серверы, которые обрабатывают запросы и хранят данные.
	Сеть: средство связи между узлами, через которое передаются данные и запросы.
	Менеджер распределенных данных: отвечает за распределение данных между узлами.
	Транзакционный менеджер: управляет транзакциями, поддерживая их атомарность, согласованность, изолированность и долговечность (ACID).
	Менеджер репликации: контролирует копирование данных между узлами для обеспечения отказоустойчивости.

8. Двенадцать правил Дейта, которым должна соответствовать распределенная СУБД.
1.	Локальная автономия или независимость от локального сайта – Каждый сайт работает самостоятельно, а также действует как независимая автономная централизованная СУБД. За безопасность, контроль параллелизма, резервное копирование и восстановление отвечает каждый сайт.
2.	Независимость от центрального сайта – Все сайты равны, и ни один сайт не зависит от центрального сайта в выполнении каких-либо услуг. Мы можем сказать, что нет такого сайта, который не мог бы, какая система не могла бы работать. Есть некоторые службы, для которых центральный сервер не требуется, это управление транзакциями, оптимизация запросов, обнаружение взаимоблокировок и управление глобальным системным каталогом.
3.	Непрерывная работа – Сбой сайта никак не влияет на систему. Система продолжает свою работу даже в случае сбоя сайта или любого расширения сети. 
4.	Локальная независимость – Чтобы получить какие-либо данные в системе, необходимо знать о хранилище данных, то есть о том, где данные хранятся в системе. 
5.	Независимость от фрагментации – Пользователь может видеть только одну логическую базу данных. Фрагментация данных прозрачна для пользователя. Для извлечения любых фрагментов базы данных нет необходимости знать названия фрагментов базы данных. 
6.	Независимость от репликации – Данные могут реплицироваться и храниться на разных сайтах. DDBMS управляет всеми фрагментами прозрачно для пользователя. 
7.	Независимость от распределенных запросов – Выполнение одного запроса в другом месте не может удовлетворить прозрачный запрос. Таким образом, оптимизация запросов имеет решающее значение и выполняется DDBMS прозрачно.
8.	Независимость от распределенных транзакций – Транзакция способна прозрачно обновлять данные на разных сайтах, но контроль восстановления и параллелизм достигаются с помощью агентов.
9.	Аппаратная независимость – У DDBM должна быть возможность работать на разных аппаратных платформах.
10.	Независимость от операционной системы – У DDBM должна быть возможность работать на разных платформах операционных систем.
11.	Независимость от сети – Система DDBMS способна работать на любой сетевой платформе.
12.	Независимость от базы данных – Система должна поддерживать продукт любого поставщика баз данных.

9. Краткая биография К. Дейта.
Крис Дейт является наиболее уважаемым в компьютерной индустрии экспертом и теоретиком в области технологии баз данных, а его книга Введение в системы баз донных остается важнейшим первоисточником для тех, кто нуждается в исчерпывающем и не отстающем от времени руководстве по теории баз данных. Крис Дейт начал свою карьеру в компании IBM, где, естественно, специализировался в области технологии баз данных. С конца 70-х годов активно занимается писательской деятельности. В 1983 г. Крис Дейт покинул IBM и с тех пор является независимым консультантом. Основным трудом К. Дейта является учебная монография “Введение в системы баз данных”. В 2003 г. вышло в свет уже восьмое издание этой книги. Каждое издание книги существенно отличается предыдущих изданий, но не снижает их собственную значимость. На русском языке опубликованы три издания “Введения в системы баз данных” – 2- e издание, 6-е издание и 7-е издание. Дейт также написал и издал серию книг, посвященным конкретным системам: DB, SQL / DS и Sybase В 1997 г. была издана книга, написанная при участии Хью Дарвена и являющаяся одним из лучших руководств по стандарту SQL :1992. К. Дейт пишет много статей, которые печатались, главным образом, в журнале Database Programming and Design . Когда этот журнал прекратил свое существование, Дейт некоторое время публиковался в журнале Intelligent Enterprise, в последние годы публикует свои статьи на сайте Фабиана Паскаля. Подборки статей Дейта, а теперь еще и Дарвена издаются в сборниках серии Selected Writings. С 1995 г. К. Дейт (вместе с Хью Дарвеном) развивает и пропагандирует идеи Третьего манифеста. третий манифест Кристофер Дейт известен во всем мире как крупнейший специалист в области баз данных вообще и реляционной технологии в частности. В отношении последних он живой классик, стоявший у истоков этой технологии, внесший в ее развитие и пропаганду существенный вклад, и бывший соратником ее официального родоначальника, Эдварда Кодда, на ранних стадиях ее развития. Глядя на нынешнее положение дел в СУБД, излишне напоминать, к появлению какого масштаба явления он оказался причастен. Занимаясь реляционным подходом десятилетиями, Крис Дейт был и остался одним из немногих специалистов, наиболее глубоко понимающих его содержание, мотивировки и проблемы. Своеобразие ситуации в том, что мнения двух классиков – своего рода Маркса и Энгельса реляционного подхода – на создаваемую технологию в свое время разошлись по ряду вопросов. Одновременно, у Дейта сформировался критический взгляд на воплощения реляционной технологии производителями СУБД. Находясь в своего рода оппозиции меньшинства, характеризуемого определением «пуристы реляционного подхода» Дейт, тем не менее, последовательно и продуманно защищает свое мнение, привлекая симпатии многих разработчиков, особенно когда занимается критикой. Часто при этом точка зрения Дейта оказывается шире реляционности, и применима к теории баз данных вообще. В сравнении с некоторыми современными авторами, выпускающими по нескольку книг в год, Дейт неплодовит, однако каждое его публичное выступление, письменное или устное, привлекает повышенное внимание специалистов.
